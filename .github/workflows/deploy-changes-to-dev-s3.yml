name: Deploy changes to dev s3

on:
  push:
    branches:
      - main
  workflow_dispatch:    
  workflow_call:
    secrets:
        AWS_ACCESS_KEY_ID:
          required: true
        AWS_SECRET_ACCESS_KEY:
          required: true
        AWS_REGION: 
          required: true
        ENV: 
          required: true

jobs:
  build-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to AWS
        id: setup_credential
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get repo name
        run: |
          echo "REPO_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_ENV

      - name: Install Dependencies
        run: npm i

      - name: Build App
        run: |
          echo '${{ secrets.ENV }}' >> .env
          npm run build --silent || echo "Warnings encountered during build, but continuing."

      - name: Upload to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: .next
          AWS_S3_BUCKET: ${{ env.REPO_NAME }}-website-frontend

  invalidate-cache:
    name: Invalidate CloudFront Cache
    runs-on: ubuntu-latest
    needs: build-app
    steps:
      - name: Login to AWS
        id: setup_credential
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get repo name
        run: |
          echo "REPO_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_ENV

      - name: Find CloudFront Distribution ID by Comment
        id: distribution_id
        run: |
          echo "CLOUDFRONT_DISTRIBUTION_ID=$(aws cloudfront list-distributions \
            --query "DistributionList.Items[?Comment=='${{ env.REPO_NAME }}-website-frontend.s3-website.${{ secrets.AWS_REGION }}.amazonaws.com'].Id" \
            --output text)" >> $GITHUB_ENV
      - name: Invalidate Cache
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{env.CLOUDFRONT_DISTRIBUTION_ID}}
          PATHS: "/"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
